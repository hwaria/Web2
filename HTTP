1. 수업 소개
- 웹브라우저와 웹서버가 컨텐츠(html, 이미지, 오디오, css, javascript 파일 등)을 주고 받기 위해서 사용하는 통신규칙인 HTTP(HyperText Transfer Protocol)의 원리알기 

- 1990년 처음 팀 버너스리가 웹을 세상에 내놓았을 때, 웹은 크게 4가지로 이루어져있었음: 
  1) html: 웹페이지를 만드는 컴퓨터 언어
  2) url: 원하는 웹페이지에 방문을 가능케 하는 주소 체계
  3) 웹브라우저 & 웹 서버: 웹 페이지를 주고 받는 소프트웨어
  4) http: 웹브라우저와 웹서버가 통신을 할 때 사용하는 통신 규칙
  
- http: 처음 등장했을 때는 매우 단순했으나, 웹이 폭발적으로 성장하면서 성능, 보안, 안정성을 확보하기 위해 많이 발전함 -> 현재는 보다 풍부한 기능을 가진 프로토콜로 발전. 단지 html과 같은 텍스트파일뿐 아니라 다양한 멀티미디어 파일까지 전송. 웹을 넘어서 인터넷이 동작하는 근간의 역할

- 클라이언트는 어떤 메세지를 통해서 서버에 요청하고, 서버는 어떤 메세지를 이용해서 응답하는지 보자.

2. HTTP 소개
- 클라이언트가 서버에게 html을 요청 -> 서버가 클라이언트에 html을 전달 (응답)

- 컨텐츠를 주고 받기 위해서는 서로가 알아들을 수 있는 공통의 약속인 메세지가 필요: HTTP, 리퀘스트와 리스폰스를 위한 메세지로 구분되어있음

- 크롬  개발자 도구 -> 네트워크 탭에서 웹브라우저와 웹서버가 어떤 통신을 하고 있는지 모니터링 가능 -> reload -> 1.html 클릭하면 웹브라우저와 웹서버가 서로 주고 받은 http 메세지를 볼 수 있음

- Headers 탭에서 “Request headers” 웹브라우저가 요청한 데이터: GET 방식으로 “1.html”을 요청하며 사용하는 통신 방법은 “http 1.1”이라는 정보를 전송, 접근한 host 주소

- “Response headers”: http 1.1로 통신함을 알려줌. 컨텐츠의 길이, 웹서버가 응답하는 정보의 방식이 text/html임을 알려줌

- 웹 브라우저는 위의 응답받은 정보를 받아서 화면에 정보를 보여줌 

3.	HTTP Request message
-	Request headers 구성: 
	요청행(request line): 첫 행, 
	Request Headers 
	Request Message Body: 서버쪽으로 전송해야할 정보 
-	Request line: GET /1.html HTTP/1.1
	“get”은 메소드 중 하나로 데이터를 웹 서버로부터 가져올 때 씀 (로그인 시 전송 기능: post)
	“1.html” : 웹 브라우저가 요청하는 정보, 이 경우 html파일
	“http/1.1”: 웹 브라우저가 현재 사용하고 있는 http의 버전을 알려줌

-	Request Headers
	“Host: localhost:8080”: 접근하고자 하는 웹 사이트의 웹서버 주소, 인터넷에 연결되어 있는 컴퓨터를 식별하는 고유 번호, 8080이라고 하는 포트 번호에 등록되어 있는 웹 서버에 연결(한 대의 컴퓨터는 여러 서버를 가질 수 있음)
	“User-Agent”: 웹 브라우저의 다른 표현, 운영체제 등 웹 브라우저 정보를 포함, 경우에 따라 특정 유저를 분류하여 차단해야할 경우가 있음
	“Accept-Encoding”: gzip, deflate, br
응답해야할 데이터의 양이 많은 경우 데이터를 압축해서 보내줘야함. 이를 위해 웹 브라우저가 지원하는 압축 방식을 알려줌
	“If-Modified-Since”: Tue, 17 Jul 2018
마지막으로 다운받은 파일의 버전을 웹 서버에게 알려주어 응답시 웹서버가 가지고 있는 파일이 최신이면 전송, 아님 전송을 하지 않음으로써 속도를 유지

4.	HTTP Response message
-	Response Header Format 
	Status: 서버가 응답을 잘 했는지의 여부
	Status code: 200번대이면 성공했다는 뜻, 300번대이면 링크 이동..?, 400번대이면 클라이언트쪽 에러, 특히 403 Forbidden, 404는 Not found, 500번대이면 서버쪽 에러, 500 internet server error 서버 내부적으로 문제있을 때 오류 메세지
	Phrase: 응답 결과 (ok 등)
	content-type: text/html, 웹 서버가 응답할때 응답은 text/html이라는 것을 보고 웹브라우저는 받은 정보를 html로 표현
	content-length: 1434 (byte)
	content-encoding: gzip이라는 방식으로 압축되어있음
	last-modified: 마지막으로 수정된 날짜
	body: 전달해야할 정보(html코드, img 등)
  

5.	수업을 마치며
http에 대해서 필수적으로 알아야 할 것들을 배움. 그 이상은 직접 찾아보면 됨.
-	더 알아볼 수 있는 것들
**http와 https(ssl)의 차이? https에서 s는 “secure”의 뜻으로 전송하고 있는 내용을 누군가 가로챈다고 하더라도 실제로 가지고 잇는 정보는 암호화되어있어 다른 사람이 볼 수 없음

**cache: 저장, 한번 웹사이트에 접속해서 다운로드한 내용은 다시 다운받지 않고 이미 저장된 파일을 읽어서 성능을 향상시키는 것. 그러나 내용이 갱신되었을때도 웹브라우저는 그 사실을 알아채지 못한다는 문제점이 있음, “cmd + R”을 누르면 강제로 캐시가 갱신됨. 캐쉬컨트롤, 프라그마, 애클리케이션캐쉬 등은 캐쉬를 제어하는 기술.

**개인화: 웹사이트를 방문하면 이 전에 처리했던 기록들을 쿠키를 이용하여 웹사이트와 웹브라우저가 저장해둔 것으로, 로그인 유지 등의 기능을 실행. 쿠키값을 웹브라우저에 설정하여 접속 때마다 설정됐던 쿠키값을 서버에 전송하여 사용자의 상태를 유지하고 사용자를 식별. 최근에는 더 많은 정보를 저장하고 보안적으로도 우수한 웹 스토리지를 사용

**프록시: 웹 브라우저와 웹 서버사이에 프록시라는 중개서버를 둠: 보안 기능, 사용자 요청을 여러 대 서비스로 분산 등의 기능을 함

**네트워크 모니터링 도구: 웹 브라우저의 개발자 도구 - 네트워크 모니터링, 와이어샤크 - http뿐만 아니라 컴퓨터에서 일어나는 모든 네트워크 트래픽을 감시할 수 있음 
