CS50 x edwith: 비전공자를 위한 컴퓨터과학 입문 
2018.05.08 ~

-	교육 과정
 

1.	컴퓨터와 컴퓨팅
1-1.	하드웨어
Q.	컴퓨팅이 다른 분야의 혁신에 어떠한 영향을 끼쳤을까?
Q. 컴퓨터의 하드웨어에는 어떤 요소들이 있나?

-	 하드웨어: 컴퓨터를 물리적으로 구성하는 요소, 컴퓨터에 연결되어 추가적인 기능을 수행
-	컴퓨터 내의 하드웨어: 크게 중앙처리장치, 기억장치, 입출력장치로 구성
1)	중앙처리장치(Central Processing Unit, CPU): 프로세서라고 불리기도, 입력장치에서 받은 명령을 실제로 처리. CPU가 1초에 얼마나 많은 연산을 할 수 있는지 속도를 측정하는 단위로 기가헤르츠(GHz)
2)	기억장치: 입력된 명령이나 데이터가 저장되는 공간
(1)	주기억장치: RAM. 기억된 정보를 읽어내거나 다른 정보를 기억시킬 수 있는 메모리. 응용 프로그램을 일시적으로 불러오거나, 데이터를 일시적으로 저장하는데 사용되는 임의 접근 기억 장치. 정보 저장량의 측정 단위는 기가바이트(GB)
(2)	보조기억장치: 
	하드드라이브(C:) 영구적으로 데이터를 저장. 주로 하드디스크(Hard Disk Drive, HDD)를 사용- 원판 모양의 플래터를 회전시켜 드라이브에 데이터를 읽고 쓰는 원리. 저장 단위는 기가바이트나 테라바이트(TB) 
	SSD(Solid State Drive)는 하드디스크와 달리 움직이는 부품 없이 더 빠른 속도로 데이터를 읽고 가격이 더 비쌈
	플래시드라이브: USB 메모리 스틱같은 이동식 저장공간 기기
	광학 디스크 드라이브: 컴퓨터가 CD나 DVD를 읽고 쓸 수 있게 해줌

3)	입출력장치: 
(1)	입력장치: 사용자가 입력한 자료를 컴퓨터가 이해할 수 있는 형태로 변환. 마우스, 키보드, 스캐너 등
(2)	출력장치: 모니터, 프린트 

-	주변기기: 컴퓨팅에 사용되는 하드웨어 중 컴퓨터 자체 부품이 아니고 보통 컴퓨터에 연결하여 사용. 키보드, 외장 스피커 등. 주변기기는 보통 컴퓨터에 있는 물리적 포트에 꽂혀 컴퓨터에 연결됨. 많이 알려진 포트로는 범용직렬버스(USB) 포트.

Q. SSD가 아닌 HDD를 사용해야하는 이유?
SSD 같은 경우는 처리 속도가 매우 빠르지만 저장용량을 늘리면 늘릴수록 HDD에 비해서 가격 경쟁력이 너무 떨어지기 때문에 대규모 데이터를 저장할 때는 HDD를 사용 -> 빠른 처리를 위한 용도로 SSD를 사용하고 단순히 데이터 저장목적으로는 HDD를 사용

1-2.	기억장치
Q. 컴퓨터에 쓰이는 기억장치의 의미
Q. 기억장치의 종류를 알고 각각의 크기의 속도를 비교
- 기억장치는 종류마다 서로 다른 속도를 내고 내부에 저장할 수 있는 양에 차이가 있어 서로 장단점을 가지고 있음
- CPU는 용량이 매우 큰 파일이나 데이터를 처리해야 하지만 한번에 32 또는 64bit의 블록 단위로 굉장히 적은 양의 데이터를 조작하고 계산하지만 굉장히 빠른 속도로 처리함, 보통 1 mb정도의 메모리 가짐
- 하드디스크는 CPU보다 훨씬 많은 양의 데이터를 저장할 수 있지만 데이터를 읽고 쓰는 데에 많은 시간이 소요
- RAM은 하드디스크보다 훨씬 데이터를 읽고 쓸 수 있어서 실행 중인 프로그램이나 열려있는 파일들이 더 빨리 접근될 수 있도록 메모리를 저장
- L1, L2, L3 캐시: RAM과 CPU사이에 존재.  RAM보다 더 빠르게 정보를 읽고 쓰는 더 작은 단위의 기억장치. 기억장치 용량이 더 작음 
-> 기억장치의 타협점은 용량과 속도에서 찾음. 속도가 빠른 기억장치는 용량이 작은 경향이 있고, 각 용량 단위의 가격이 더 비쌈 
 
- 컴퓨터에서 여러 프로그램을 실행하기 위해서는 운영체제와 프로그램이 동시에 실행시켜야 하는데 이때 RAM을 사용함. 너무 많은 공간의 RAM이 사용되면 근래의 운영체제는 가상 기억장치라는 것을 써서 일시적으로 데이터를 RAM에서 하드디스크로 옮기고, 사용자가 필요로 할때 다시 정보를 불러옴 

Q. 여러분이 사용하는 컴퓨터의 기억장치는 얼마나 되나요?
Q. 왜 RAM이 하드디스크보다 비싸다고 생각하나요?
Q. 왜 이렇게 다른 단계의 기억장치가 있을까요?
더 빠르게 처리하기 위해서. 가장 핵심에 있는 CPU가 받아들이고 내보내는 속도에 비해 HDD( 혹은 SDD)가 받아들이고 내보낼 수 있는 단위시간당 속도 차이가 커서 CPU를 효율적으로 쓸 수 없음. 또한 프로그램이든, 그 프로그램의 어떤 필요한 연산이든 크기가 다르므로 이에 맞춰 효율적으로 대응하기 위해 단계를 나눔

1-3.	비트와 바이트
Q. 데이터를 표현하는 추상적 개념의 종류
Q. 2진 수열이 디지털 데이터를 어떻게 표현하나?
- 비트: 정보를 저장하고 연산을 수행하기 위해 컴퓨터는 비트라는 측정 단위를 씀. 비트는 이진 숫자 (binary digit)의 줄임말이며, 0과 1 두 가지 값만 가질 수 있는 측정 단위. 디지털 데이터를 여러 비트들로 나타냄으로써 두 가지 값만을 가지고도 많은 양의 정보를 저장할 수 있음. 또한 컴퓨터는 저장되어 있는 데이터를 수정하기 위해 비트에 수학적 연산을 수행
- 비트열: 비트 한 개로는 많은 양의 데이터를 나타내기에 부족하므로 여러 숫자 조합을 컴퓨터에 나타내기 위해 비트열을 사용. 바이트(byte)는 여덟 개의 비트가 모여 만들어진 것. 하나의 바이트는 여덟 개의 비트가 있고, 비트 하나는 0과 1로 표현할 수 있기 때문에 2^8= 256개의 서로 다른 바이트가 존재할 수 있음
킬로바이트는 1,000바이트, 메가바이트는 1,000킬로바이트, 기가바이트는 1,000메가 바이트, 테라바이트는 1,000기가바이트
-	하나의 비트로는 어떠한 값이 참인지 거짓인지의 정보를 저장할 수 있음

1-4.	2진수 
-	컴퓨터는 비트 형태로 데이터를 표현. 비트를 가지고 수학적 연산을 하기 위해 컴퓨터는 0, 1만을 사용하는 2진수라는 수 체계를 사용: 전기적 신호 켜짐(1)과 꺼짐(0)을 이용하여 작동
-	수체계: 우리가 사용하는 수 체계는 10진수. 0부터 9까지 10개의 숫자를 이용하여 값을 표현 
-	숫자 13을 이진수로? 1011
: 각 자리 숫자마다 2의 0승, 1승, 2승(1, 2, 4, 8..)을 곱해주면 됨 

1-5.	ASCII코드
-	아스키는 컴퓨터가 텍스트 데이터를 저장하기 위해 흔하게 사용하는 표준코드체계. 문자를 컴퓨터가 이해할 수 있는 이젠 데이터로, 혹은 그 반대로 변환하는 표준 방법
-	글자를 10진수로 대응하여 표현 “A”는 65, ‘a’는 97
-	기준 아스키코드표는 7비트만 이용해서, 2의 7승의 개수, 128개 문자를 나타낼 수 있었고 확장 아스키는 8번째 비트를 추가하여 총 256개의 문자를 나타낼 수 있음. 
-	수학 기호들과 영어 외 다른 언어의 글자들은 표준 아스키표에 들어가기 힘드므로 훨씬 더 많은 문자들을 포함할 수 있는 유니코드가 등장
-	유니코드는 100만개 이상의 문자를 나타낼 수 있는 문자 인코딩 표준

1-6.	16진수: 디지털 데이터의 또 다른 표현 방법
-	컴퓨터 과학에서는 숫자를 10진수나 2진수 대신 16진수(hexadecimal)로 표현하는 경우가 많음, (0-9, a-f)
-	2진수로 표현하면 너무 길이가 길어지기 때문에 16진수로 표현하면 길이가 짧아지고, 2개의 16진수는 1byte의 2진수로 변환되기때문에 정보 표현이 유용

1-7.	이미지
-	자주 보는 이미지 형식: 비트맵(.bmp), JPG(.jpg), PNG(.png), GIF(.gif) 등
-	컴퓨터는 이미지를 정해진 규칙에 따라 숫자로 변환하여 저장, 표현 
-	사진 파일에 들어있는 정보: 사진을 찍으면 주로 jpeg이라는 확장자를 갖게 되고 이미지를 압축해서 저장. 이미지는 다양한 이미지 파일 형식으로 저장할 수 있는데 저장되는 형식에 따라 파일 안에 들어가있는 비트 데이터들의 구조가 다름: 각각의 이미지 파일은 보통 첫 부분에 파일을 구분할 수 있는 구분자를 넣어둠 (jpeg은 255 216 255라는 10진수로 시작)
-	비트맵 파일 형식은 이미지 데이터를 가장 단순하게 저장하지만 압축을 하지 않아 파일 크기가 큼
-	JPEG은 이미지를 압축할 수 있고 gif파일이 256색을 표시할수 있는데 비해 1600만 색상을 나타낼 수 있어 고해상도를 나타내기에 적합
-	Gif는 이미지의 전송을 빠르게하기 위해 압축저장방식을 사용. Jpeg보다 압축시 이미지 손상이 적음
-	Png는 gif와 jpeg의 장점을 합쳐 gif보다 압축률이 좋고 jpeg보다 원본 손상이 적음 

1-8.	가상 현실과 증강 현실
-	공통점: 사용자에게 기존의 주변환경과 분리된 전혀 다른 환경을 경험하게 하지 않고 현재의 환경 위에 영상, 게임 등의 효과를 입히는 기술 
-	가상현실(virtual reality): 가상의 환경이나 상황을 컴퓨터로 만들어서 사람들이 실제로 그 상황에 들어와있는 것처럼 느끼고 상호작용할 수 있도록 만들어주는 인터페이스 
-	증강현실(Augmented Reality): 가상 현실과 함께 가상의 정보를 이용한 기술. 가상현실은 가상의 환경에서 가상의 물체와 상호작용 하는 반면에, 증강현실은 현실의 환경에서 가상의 이미지가 겹쳐서 보여지는 것 

1-9.	인공 지능
-	자연어: 인간이 일상적으로 사용하는 언어. 같은 의미라도 표현 방법이 다양한 것이 특징
-	기계어: 컴퓨터가 사용하는 언어로 명령을 내리기 위해서 규칙이 정해져 있는 프로그래밍 언어
-	컴퓨터가 사람의 언어를 기계적으로 분석하여 컴퓨터가 이해할 수 있는 형태로 바꾸어 처리하는 것: 자연어 처리
-	음성인식: 마이크와 같은 소리 센서를 통해 입력된 음향 신호를 단어나 문장 등으로 변환하는 기술: 대답이 아닌 먼저 질문을 이해하는 것이 중요 
-	머신러닝: 인공 지능을 구현하기 위한 하나의 분야로, 머신러닝을 통해 컴퓨터는 많은 데이터를 스스로 학습하여 그 데이터에 대한 패턴을 파악: 데이터의 연관성과 상하 구조를 파악하기 위해서 굉장히 많은 양의 데이터를 필요

2.	알고리즘 기입력한 자료를 출력하려면 어떤 과정이 필요할까?
2-1. 알고리즘
-	알고리즘: 우리가 컴퓨터에 입력한 자료를 출력형태로 만들기 위해서는 컴퓨터의 처리과정, 즉 명령어들의 순서상 처리가 필요, 이를 알고리즘이라고 함: 입력된 자료가 출력 형태로 나가기 위해 순서에 따라 실행해야 하는 명령어들을 보다 효율적으로 나열하여 시간과 공간을 단축할 수 있음
-	정확성과 효율성이 중요

알고리즘을 이해하기 쉽게 표현하는 방법이 있을까?
2-2. 의사코드
-	프로그래밍을 할 때는 그 구조를 잘 구성하는 것이 매우 중요
-	프로그래밍 전에 우리가 이해하기 쉬운 표현으로 컴퓨팅 과정을 표현하는 것: 의사 코드 이용
-	의사코드: 알고리즘을 표현하는 방법 중 하나. 프로그래밍 언어보다 문법적 제약을 적게 받음. 발생할 수 있는 모든 가능의 수를 고려해야함
코드 작성법을 알고 있는데도 의사코드를 사용하는 이유: 보다 명확하게 그 의미를 나타낼 수 있기 때문에 알고리즘을 이해하기 쉬움. 보통 프로그램을 작성하기 전에 알고리즘의 모델을 대략적으로 모델링하기 위해 의사코드를 작성

자료를 맨 처음부터 하나씩 비교하면서 찾는 방법은?
2-3. 선형 탐색
-	원하는 원소가 발견될 때까지 처음부터 마지막 자료까지 차례대로 탐색
-	정확하지만 비효율적임 
-	자료가 정렬되어 있지 않거나 그 어떤 정보도 없어 하나씩 찾아야 하는 경우 유요-> 탐색 이전에 정보를 정렬해주는 것의 중요성


인접한 두 개의 자료를 차례로 비교하면서 정렬하는 것은?
2-4. 버블 정렬
-	정렬 알고리즘 중 하나
-	두 개의 인접한 자료 값을 비교하면서 위치를 교환하는 방식으로 정렬하는 방법
-	N개의 원소에 대해서 버블 정렬을 한번 수행할 때마다 n번째의 원소가 제 자리를 찾게 됨 
-	N개의 요소를 정렬해 주기 위해서는 n-1번 실행해주어야 함

-	자료 중 가장 작은 것을 찾아 숫서대로 정렬하는 방법은?
2-5. 선택 정렬
-	정렬된 부분, 정렬되지 않은 부분을 나누어 정렬하는 방법은?
2-6. 삽입 정렬
-	정렬 알고리즘의 효율성을 높이기 위해서는 무엇을 고려해야 하나?
2-7. 시간 복잡도
-	많은 자료를 분해하고 다시 합쳐 정렬하는 것은?
2-8. 합병 정렬
-	정렬된 데이터에서 원하는 값을 쉽고 빠르게 찾는 방법은?
2-9. 이진 탐색

3.	프로그래밍 기초

5. 인터넷과 네트워크 
5-1. 인터넷 기초
-	IP주소: 인터넷상에 있는 장치들은 IP주소들을 할당받음: 인터넷에 연결된 장치들을 식별할 수 있도록 해주어 인터넷상의 다른 장치들이 특정 장치를 찾을 수 있도록 해줌. 또한 정보가 인터넷을 통해 전송될 때 어디에서 정보를 보냈으며 어디로 보내는지를 인터넷이 알 수 있음 / 현재는 ipv4라는 32bit ip주소방식을 사용하지만 40억개의 Ip가 점점 부족하게 됨에 따라 ipv6라고 불리는 128bit Ip주소방식으로 대체. 현재는 개도기 단계
-	인터넷에 연결하기: 무선 장치를 인터넷에 연결하기 위해서는 액세스포인트(AP)에 무선으로 연결 – 스위치에 연결(케이블 모뎀, 데이터 연결 잭이 있는 장치) – 라우터에 연결 – 광역 네트워크에 연결 
DHCP(Dynamic Hose Configuration Protocal): 스위치에 연결되는 서버. 컴퓨터에 고유한 ip주소를 할당하는 기술 
URL(Uniform Resource Loacator): 웹페이지의 ip주소를 텍스트로 된 주소로 변환한 것. 도메인 주소
DNS(Domain Name System): 라우터에 연결되는 서버. 사용자가 url을 입력하여 웹사이트에 접근하려고 할 때 url을 받아서 ip주소로 변환
-	그 외 프로토콜: TCP 전송 제어 프로토콜- 인터넷으로 보내진 모든 데이터패킷이 전송되도록 보장하고, 인터넷을 통해 전송되는 정보 패킷이 어떤 서비스를 위한 것인지 알 수 있도록 보장 / HTTP 하이퍼텍스트 전송 프로토콜 – 웹 브라우저들과 서버들이 통신할 수 있도록 약속된 통신 규칙.

5-2. IP주소
-	인터넷 프로토콜은 인터넷의 정보들이 어떻게 전송되는지를 정의하기 위한 규칙. 인터넷 상의 장치들을 식별할 수 있게 해줌 
-	iPV4 -> IPV6 ip 주소 방식: 16bit정보를 갖고 있는 8개의 숫자로 구성-> 각 ip는 128bit
-	사설 IP 주소: 특정 로컬 네트워크 내에서 사용되는 것. 사설 ip주소를 갖는 장치들은 공인 ip주소를 공유하여 Ipv4 표준에서 필요한 공용 ip 주소의 개수를 줄임. Ip 주소 127.0.01은 사용자가 현재 사용하고 있는 장치에 연결하는 주소(로컬호스트) 

5-3. DNS와 DHCP: 인터넷상의 장치들이 ip주소를 효과적으로 사용할 수 있도록 하는 두가지 중요 시스템
-	DNS: 도메인 이름 시스템. 웹 브라우저 주소창에 입력하는 텍스트를 ip주소로 변환
-	DHCP: 동적 호스트 구성 프로토콜. 각 장치에 ip주소를 할당. 장치에 네트워크에 연결할 때 컴퓨터는 dhcp서버에 연결 – dhcp는 사용가능한 ip주소 풀에 접근 – 장치에 고유한 ip주소를 할당

5-4. 라우터: 인터넷상에서 패킷(메세지)의 위치를 추출하여 그 위치에 대한 최상의 경로를 지정하며 이 경로에 따라 다음 장치로 전달시키는 장치
-	인터넷은 한 장치에서 다른 장치로 정보를 보냄. 인터넷에서 데이터를 쉽게 전송하도록 돕기 위해서 라우터가 사용됨.
-	라우터는 인터넷의 구성 요소. 데이터를 다양한 네트워크로 보내줌 
-	인터넷상의 장치들 사이에서 중재자 역할을 하여 “패킷”단위의 데이터를 인터넷에 전송: 라우터는 각 데이터 패킷이 목적지 ip주소에 따라 어디에 보내져야 하는지를 알 수 있도록 만들어짐. 라우터는 ip주소의 앞 숫자들을 보고 패킷을 어느 방향으로 보내야 할지 판단 = 라우팅 

5-5. TCP와 IP (TCP/IP)
-	TCP(Transmission Control Protocol: 전송 제어 프로토콜): 데이터를 순서 있는 패킷들로 분해하여 전송함으로써 수신 컴퓨터가 받은 패킷들을 올바른 순서로 재조립할 수 있도록 함. 또 데이터에 포트 번호를 할당하여 데이터가 어떤 유형의 인터넷 서비스에 사용되는지 알려줌
-	IP: 정보가 한 컴퓨터에서 다른 컴퓨터로 어떻게 전송되는지에 대한 규칙들을 모아놓은 것: 연결된 라우터들의 망으로 만들어짐
-	TCP/IP: 인터넷이 통신을 하기 위해서는, 먼저 인터넷을 통해 데이터를 받기 위해서 우선 데이터가 더 작은 패킷들로 분해되어야 하고, tcp는 각 패킷에 포트 번호와 패킷 번호를 매긴다 – ip가 패킷의 목적지를 알려주면 라우터들을 통해 데이터가 전송된다 

5-6. HTTP
-	웹 브라우저가 웹 서버와 대화하기 위한 프로토콜. 사용자가 웹 페이지에 방문하려 할때, 웹 브라우저는 웹 서버에 웹 페이지의 내용을 요청 -> 웹 서버는 그 요청에 응답하기 위해 요청을 해석, 요청된 페이지를 찾아 클라이언트에 돌려내줌: http는 이 과정을 용이하게 해주며, 요청을 보내고 받는 표준적인 방법을 정해줌 
-	GET과 POST 요청: 사용자가 웹 브라우저에 url을 입력해 웹 페이지를 요청하면 웹 브라우저는 get요청이라는 특정한 유형의 http요청을 보냄 – 단어 get 뒤에는 요청 url을 씀 (사용자가 요청한 웹 페이지의 경로). /는 웹페이지의 최상위 경로
<Request>
GET / HTTP / 1.1   => get 요청, http 프로토콜의 버전을 알려줌 (일반적으로 1.1)
Host: www.google.com => 호스트는 웹 페이지를 요청할 때의 도메인 이름
POST 요청은 사용자가 온라인 폼에 데이터를 입력하고 웹 서버로 데이터를 전송할 때 사용
-	상태코드: 서버는 클라이언트에게 요청의 결과를 나타내는 상태코드를 함께 보내주며 응답
200: 요청이 성공적으로 처리됨 / 404 웹서버에 존재하지 않는 페이지 요청시 / 403 사용자가 페이지 접근 권한이 없을 경우 / 500 내부 서버 오류
<Response>
HTTP/1.1 200 ok -> 요청 성공
Content-Type: text/html

5-7. 신뢰모델 
-	Trust Model: 사용자가 인터넷에서 소프트웨어를 다운로드할 때는 그 소프트웨어에 악성코드가 없다는 커다란 신뢰가 필요. 우리는 우리가 다운로드하는 소프트웨어가 안전하다고 믿음: 신뢰모델의 기본
-	백도어(Back Door): 사용자들이 원래 시스템에 접속하는 방법과는 다른 비정상적인 수단으로 시스템에 접속하는 방법
-	컴파일러 내부의 익스플로잇(Exploit): 소스 코드를 오브젝트 코드로 변환시키는 프로그램인 컴파일러가 익스플로잇의 원천일 수도 있음: 컴파일러의 소스 파일과 로그인 프로그램의 소스 파일이 악성코드나 백도어를 포함하지 않을 지라도, 소스파일을 컴파일하는 과정에서 악성코드가 주입될 수 있음

5-8. 사이버보안
-	사이버 공격: 해커가 악의적인 목적으로 컴퓨터 시스템과 네트워크를 대상으로 공격을 시도하는 것
-	사이버 보안: 웹사이트와 사용자가 사이버 위협에 스스로 더 잘 대처할 수 있도록 하는 것 ex. 사용자는 더 안전한 비밀번호 사용, 스팸 메일 보지 않기
-	비밀번호: 비밀번호 도용 방지 수단으로 이중 인증을 하기도. 비밀번호와 더불어 추가적인 인증 정보를 제공하는 것
-	피싱공격(Phishing): 회사를 사칭하는 메일을 보내고 링크로 접속하는 것을 유도하여 사용자의 비밀번호와 민감한 정보를 요청하는 것
-	보안 소켓 계층: https(http secure)는 http와 보안 소켓 계층(ssl)이라고 불리는 기술을 결합한 인터넷 통신 프로토콜. Ssl을 사용하는 웹사이트는 각각 인증서를 갖고 있는데 이것은 웹사이트를 접근하려는 사용자에게 제공됨. 인증서는 웹 브라우저에게 웹 서버로 보내진 요청을 어떻게 암호화했는지 말해주는 공개키를 포함하고 웹 서버는 암호화된 요청을 해독하는 다른 키인 비밀키를 갖고 있음
-	그 외의 사이버 공격
중간자 공격(men in the middle attack): 웹 서버와 사용자 사이에는 DNS 서버와 라우터 등으로 악성 코드를 보내 https://를 http://로 바꿀 수 있음. 그 결과 사용자가 봤을 때는 정상적인 사이트지만 실제로는 그렇지 않은 사이트로 변경됨.
세션 하이재킹: 웹 사이트에 접속할 때 자동적으로 만들어지는 임시파일로 사용자의 정보가 담겨있는 쿠키를 얻기 위해 상대방의 네트워크 트래픽을 관찰하고, 상대방의 http헤더에 쿠키를 사용하여 상대방을 다른 사람으로 생각하도록 웹 서버를 속이는 기술 
